@page "/{section}/{**slug}"
@model ParksComputing.Engine.Pages.PageLoaderModel
@{
    Layout = "_Layout";
    ViewData["Title"] = Html.Raw(Model.Title);
}

@section Meta { @if (Model.MetaElements is not null) {
@foreach (var element in @Model.MetaElements) {
    @Html.Raw(element.OuterHtml)
    @Html.Raw("\n")
}}
}

@section Links { @if (Model.LinkElements is not null) {
@foreach (var element in @Model.LinkElements) {
    @Html.Raw(element.OuterHtml)
    @Html.Raw("\n")
}}
}

@section Style { @if (Model.StyleElements is not null) {
@foreach (var element in @Model.StyleElements) {
    @Html.Raw(element.OuterHtml)
    @Html.Raw("\n")
}}
}

@section HeadScripts { @if (Model.HeadScriptElements is not null) {
@foreach (var element in @Model.HeadScriptElements) {
    @Html.Raw(element.OuterHtml)
    @Html.Raw("\n")
}}
}

@{
    bool hasInnerH1 = Model.PageContent?.IndexOf("<h1", System.StringComparison.OrdinalIgnoreCase) >= 0;
}
<article class="post-content">
    <header class="post-header">
        @if (!hasInnerH1)
        {
            <h1 class="post-title">@Html.Raw(Model.Title)</h1>
        }
        <div class="post-meta">
            <time datetime="@Model.CreatedGmt">@Model.Created</time>
            @if (Model.CreatedGmt != Model.ModifiedGmt)
            {
                <span class="updated-on">&nbsp;· Updated <time datetime="@Model.ModifiedGmt">@Model.Modified</time></span>
            }
        </div>
    </header>
    <div class="post-body">
        @Html.Raw(Model.PageContent)
    </div>
</article>


